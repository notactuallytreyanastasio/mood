//DOOMCMBT JOB (ACCT),'DOOM COMBAT LOOP',CLASS=A,MSGCLASS=X,
//         NOTIFY=&SYSUID,REGION=4M
//*
//* DOOM COMBAT CONTROL LOOP
//* Continuously analyzes game state and makes tactical decisions
//*
//JCLLIB   JCLLIB ORDER=(DOOM.PROCLIB)
//*
//DOOMLOOP PROC CYCLES=10
//*
//TACTICAL EXEC PGM=DOOMTACT,COND=(0,NE)
//STEPLIB  DD DSN=DOOM.LOADLIB,DISP=SHR
//GAMESTAT DD DSN=DOOM.STATE,DISP=SHR
//ENTITIES DD DSN=DOOM.ENTITIES,DISP=SHR  
//TACTICS  DD DSN=DOOM.TACTICS,DISP=(NEW,PASS),
//            UNIT=SYSDA,SPACE=(TRK,(1,1)),
//            DCB=(RECFM=FB,LRECL=100,BLKSIZE=3000)
//COMMANDS DD DSN=DOOM.COMMANDS,DISP=(MOD,KEEP),
//            UNIT=SYSDA,SPACE=(TRK,(1,1)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSOUT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//*
//* Decision tree based on return codes:
//* RC=0  - Exploring (no threats)
//* RC=5  - Seeking items (low health/ammo)
//* RC=10 - Combat mode (engaging enemies)
//* RC=20 - Retreat mode (critical danger)
//* RC=99 - Error condition
//*
//DECIDE   IF (TACTICAL.RC EQ 10) THEN
//*
//* COMBAT SEQUENCE - Aim and fire
//*
//AIMSHT   EXEC PGM=DOOMAIM,COND=(0,NE)
//STEPLIB  DD DSN=DOOM.LOADLIB,DISP=SHR
//TACTICS  DD DSN=*.TACTICAL.TACTICS,DISP=(OLD,DELETE)
//COMMANDS DD DSN=DOOM.COMMANDS,DISP=(MOD,KEEP)
//SYSOUT   DD SYSOUT=*
//*
//FIRE     EXEC PGM=DOOMFIRE,COND=(0,NE,AIMSHT)
//STEPLIB  DD DSN=DOOM.LOADLIB,DISP=SHR
//COMMANDS DD DSN=DOOM.COMMANDS,DISP=(MOD,KEEP)
//SYSOUT   DD SYSOUT=*
//*
//         ELSE
//         IF (TACTICAL.RC EQ 20) THEN
//*
//* RETREAT SEQUENCE - Find cover and heal
//*
//RETREAT  EXEC PGM=DOOMRUN,COND=(0,NE)
//STEPLIB  DD DSN=DOOM.LOADLIB,DISP=SHR
//GAMESTAT DD DSN=DOOM.STATE,DISP=SHR
//COMMANDS DD DSN=DOOM.COMMANDS,DISP=(MOD,KEEP)
//SYSOUT   DD SYSOUT=*
//*
//         ELSE
//         IF (TACTICAL.RC EQ 5) THEN
//*
//* ITEM SEARCH - Navigate to health/ammo
//*
//FINDITEM EXEC PGM=DOOMMOVE,COND=(0,NE)
//STEPLIB  DD DSN=DOOM.LOADLIB,DISP=SHR
//TACTICS  DD DSN=*.TACTICAL.TACTICS,DISP=(OLD,DELETE)
//COMMANDS DD DSN=DOOM.COMMANDS,DISP=(MOD,KEEP)
//SYSOUT   DD SYSOUT=*
//*
//         ELSE
//*
//* EXPLORE MODE - Move forward and look around
//*
//EXPLORE  EXEC PGM=DOOMEXPL,COND=(0,NE)
//STEPLIB  DD DSN=DOOM.LOADLIB,DISP=SHR
//COMMANDS DD DSN=DOOM.COMMANDS,DISP=(MOD,KEEP)
//SYSOUT   DD SYSOUT=*
//*
//         ENDIF
//         ENDIF  
//         ENDIF
//*
//* WAIT FOR GAME STATE UPDATE
//*
//WAIT     EXEC PGM=IEBGENER
//SYSUT1   DD DUMMY,DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
//SYSUT2   DD DUMMY
//SYSPRINT DD DUMMY
//SYSIN    DD DUMMY
//*
//         PEND
//*
//* MAIN EXECUTION - RUN COMBAT LOOP
//*
//INIT     EXEC PGM=IEFBR14
//COMMANDS DD DSN=DOOM.COMMANDS,DISP=(MOD,CATLG),
//            UNIT=SYSDA,SPACE=(TRK,(5,5)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//*
//* Execute combat loop for specified cycles
//*
//LOOP01   EXEC DOOMLOOP,CYCLES=1
//LOOP02   EXEC DOOMLOOP,CYCLES=2,COND=(99,EQ,LOOP01.TACTICAL)
//LOOP03   EXEC DOOMLOOP,CYCLES=3,COND=(99,EQ,LOOP02.TACTICAL)
//LOOP04   EXEC DOOMLOOP,CYCLES=4,COND=(99,EQ,LOOP03.TACTICAL)
//LOOP05   EXEC DOOMLOOP,CYCLES=5,COND=(99,EQ,LOOP04.TACTICAL)
//LOOP06   EXEC DOOMLOOP,CYCLES=6,COND=(99,EQ,LOOP05.TACTICAL)
//LOOP07   EXEC DOOMLOOP,CYCLES=7,COND=(99,EQ,LOOP06.TACTICAL)
//LOOP08   EXEC DOOMLOOP,CYCLES=8,COND=(99,EQ,LOOP07.TACTICAL)
//LOOP09   EXEC DOOMLOOP,CYCLES=9,COND=(99,EQ,LOOP08.TACTICAL)
//LOOP10   EXEC DOOMLOOP,CYCLES=10,COND=(99,EQ,LOOP09.TACTICAL)
//*
//* For continuous operation, this job would be resubmitted
//* automatically using INTRDR
//*
//RESUBMIT EXEC PGM=IEBGENER,COND=(0,NE)
//SYSUT1   DD DSN=DOOM.JCLLIB(DOOMCMBT),DISP=SHR
//SYSUT2   DD SYSOUT=(A,INTRDR)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//*